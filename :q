-- Fixes Notify opacity issues
vim.o.termguicolors = true

vim.pack.add({
	{ src = "https://github.com/neovim/nvim-lspconfig" },
	{ src = "https://github.com/tpope/vim-fugitive" },
	{ src = "https://github.com/tpope/vim-sleuth" }, -- Detect tabstop and shiftwidth automatically
	{ src = "https://github.com/tpope/vim-obsession" },
	{ src = "https://github.com/lewis6991/gitsigns.nvim" },
	{ src = "https://github.com/blazkowolf/gruber-darker.nvim" },
	{ src = "https://github.com/echasnovski/mini.pick" },
	{ src = "https://github.com/onsails/lspkind.nvim" },
	{ src = "https://github.com/catppuccin/nvim", name = "catppuccin" },
	{ src = "https://github.com/nvim-lua/plenary.nvim" },
	{ src = "https://github.com/ThePrimeagen/git-worktree.nvim" },
})

-- require("lazy").setup({
--
-- 	{
-- 		src = "https://github.com/echasnovski/mini.nvim",
-- 		version = false,
-- 		dependencies = {
-- 			"GCBallesteros/NotebookNavigator.nvim",
-- 		},
-- 	},
--
-- 	require("plugins.folke"),
--
-- 	{
-- 		"MeanderingProgrammer/markdown.nvim",
-- 		main = "render-markdown",
-- 		opts = {},
-- 		name = "render-markdown", -- Only needed if you have another plugin named markdown.nvim
-- 		dependencies = { "nvim-treesitter/nvim-treesitter", "nvim-tree/nvim-web-devicons" }, -- if you use the mini.nvim suite
-- 	},
-- 	{
-- 		"ThePrimeagen/harpoon",
-- 		branch = "harpoon2",
-- 		dependencies = { "nvim-lua/plenary.nvim" },
-- 	},
-- 	{
-- 		"mistricky/codesnap.nvim",
-- 		build = "make",
-- 	},
-- 	{
-- 		"NeogitOrg/neogit",
-- 		lazy = false,
-- 		dependencies = {
-- 			"nvim-lua/plenary.nvim", -- required
-- 			"sindrets/diffview.nvim", -- optional - Diff integration
-- 			"nvim-telescope/telescope.nvim", -- optional
-- 		},
-- 		config = true,
-- 	},
-- 	{
-- 		"iamcco/markdown-preview.nvim",
-- 		cmd = { "MarkdownPreviewToggle", "MarkdownPreview", "MarkdownPreviewStop" },
-- 		ft = { "markdown" },
-- 		build = function()
-- 			vim.fn["mkdp#util#install"]()
-- 		end,
-- 	},
-- 	{
-- 		"rmagatti/goto-preview",
-- 		config = function()
-- 			require("goto-preview").setup({
-- 				width = 120, -- Width of the floating window
-- 				height = 15, -- Height of the floating window
-- 				border = { "↖", "─", "┐", "│", "┘", "─", "└", "│" }, -- Border characters of the floating window
-- 				default_mappings = true,
-- 				debug = false, -- Print debug information
-- 				opacity = nil, -- 0-100 opacity level of the floating window where 100 is fully transparent.
-- 				resizing_mappings = false, -- Binds arrow keys to resizing the floating window.
-- 				post_open_hook = nil, -- A function taking two arguments, a buffer and a window to be ran as a hook.
-- 				references = { -- Configure the telescope UI for slowing the references cycling window.
-- 					telescope = require("telescope.themes").get_dropdown({ hide_preview = false }),
-- 				},
-- 				-- These two configs can also be passed down to the goto-preview definition and implementation calls for one off "peak" functionality.
-- 				focus_on_open = true, -- Focus the floating window when opening it.
-- 				dismiss_on_move = false, -- Dismiss the floating window when moving the cursor.
-- 				force_close = true, -- passed into vim.api.nvim_win_close's second argument. See :h nvim_win_close
-- 				bufhidden = "wipe", -- the bufhidden option to set on the floating window. See :h bufhidden
-- 				stack_floating_preview_windows = true, -- Whether to nest floating windows
-- 				preview_window_title = { enable = true, position = "left" }, -- Whether
-- 			})
-- 		end,
-- 	},
--
--
-- 	{ -- Autocompletion
-- 		"hrsh7th/nvim-cmp",
-- 		event = "InsertEnter",
-- 		dependencies = {
-- 			"hrsh7th/cmp-nvim-lsp",
-- 			"L3MON4D3/LuaSnip",
-- 			"saadparwaiz1/cmp_luasnip",
-- 			"hrsh7th/cmp-path",
-- 		},
-- 	},
--
-- 	{ -- Formatting
-- 		"stevearc/conform.nvim",
-- 	},
--
-- 	{ -- Highlight, edit, and navigate code
-- 		"nvim-treesitter/nvim-treesitter",
-- 		build = function()
-- 			pcall(require("nvim-treesitter.install").update({ with_sync = true }))
-- 		end,
-- 		dependencies = {
-- 			"nvim-treesitter/nvim-treesitter-textobjects",
-- 		},
-- 	},
-- 	{
-- 		"mfussenegger/nvim-dap",
-- 		dependencies = {
-- 			{ "igorlfs/nvim-dap-view", opts = {} },
-- 			{ "nvim-neotest/nvim-nio" },
-- 		},
-- 	},
-- 	{
-- 		"mfussenegger/nvim-dap-python",
-- 		ft = "python",
-- 		dependencies = {
-- 			{ "mfussenegger/nvim-dap" },
-- 		},
-- 		config = function(_, opts)
-- 			dap = require("dap-python")
-- 			dap.setup("uv")
-- 			dap.test_runner = "pytest"
-- 		end,
-- 	},
-- 	{
-- 		"igorlfs/nvim-dap-view",
-- 		---@module 'dap-view'
-- 		---@type dapview.Config
-- 		opts = {},
-- 	},
-- 	-- {
-- 	-- 	"rcarriga/nvim-dap-ui",
-- 	-- 	dependencies = { "mfussenegger/nvim-dap", "nvim-neotest/nvim-nio" },
-- 	-- },
-- 	"theHamsta/nvim-dap-virtual-text",
-- 	"leoluz/nvim-dap-go",
--
-- 	-- Git related plugins
--
-- 	"nvim-lualine/lualine.nvim", -- Fancier statusline
-- 	{ "lukas-reineke/indent-blankline.nvim", main = "ibl", opts = {} },
--
-- 	-- Fuzzy Finder (files, lsp, etc)
-- 	{ "nvim-telescope/telescope.nvim", branch = "0.1.x", dependencies = { "nvim-lua/plenary.nvim" } },
-- 	"nvim-telescope/telescope-symbols.nvim",
-- 	-- Fuzzy Finder Algorithm which requires local dependencies to be built. Only load if `make` is available
-- 	{ "nvim-telescope/telescope-fzf-native.nvim", build = "make", cond = vim.fn.executable("make") == 1 },
--
-- 	{
-- 		"scalameta/nvim-metals",
-- 		dependencies = {
-- 			"nvim-lua/plenary.nvim",
-- 		},
-- 		ft = { "scala", "sbt", "java" },
-- 	},
--
-- 	{
-- 		"benomahony/uv.nvim",
-- 		opts = {
-- 			picker_integration = true,
-- 		},
-- 	},
--
-- 	require("plugins.dadbod"),
-- 	require("plugins.yazi"),
-- })
